package ejemplo;

	public class Operario extends Usuario{
	
		private String turno;
		private String nombreArea;
		private int aniosAntiguedad;
		private double sueldo;
				
			public Operario(String nombre, String apellido, String id, String nombreArea, int aniosAntiguedad, int telefono,
					String usuario, String contrase単a, double sueldo, String turno) {
				super(nombre, apellido, id, usuario, telefono, contrase単a);
				this.turno = turno;
				this.nombreArea = nombreArea;
				this.aniosAntiguedad = aniosAntiguedad;
				this.sueldo = sueldo;
					
			}
			
			
			
			public String getTurno() {
				return turno;
			}
			public void setTurno(String turno) {
				this.turno = turno;
			}			

			public String getNombreArea() {
				return nombreArea;
			}
			public void setNombreArea(String nombreArea) {
				this.nombreArea = nombreArea;
			}

			public int getAniosAntiguedad() {
				return aniosAntiguedad;
			}
			public void setAniosAntiguedad(int aniosAntiguedad) {
				this.aniosAntiguedad = aniosAntiguedad;
			}

			public double getSueldo() {
				return sueldo;
			}
			public void setSueldo(double sueldo) {
				this.sueldo = sueldo;
			}




			//metodos
            public boolean agregarOperario() {         	
				String sql ="INSERT INTO `operario`(`id`, `nombre`, `apellido`, `nombreArea`, `aniosAntiguedad`, `telefono`, `contrase単a`, `sueldo`,`turno`, `usuario`) VALUES (?,?,?,?,?,?,?,?,?, ?) ";
				
				try {
					stmt = conexion.prepareStatement(sql);
					stmt.setString(1, this.getId());
					stmt.setString(2, this.getNombre());
					stmt.setString(3, this.getApellido());
					stmt.setString(4, this.getNombreArea());
					stmt.setLong(5, this.getAniosAntiguedad());
					stmt.setLong(6, this.getTelefono());
					stmt.setString(7, this.getContrase単a());					
					stmt.setDouble(8, this.getSueldo());
					stmt.setString(9, this.getTurno());		
					stmt.setString(10, this.getUsuario());	
					stmt.executeUpdate();
					return true;
					
				} catch (Exception e) {
					System.out.println("Hubo un error"+e.getMessage());
					return false;
				}
			}
			
			
			
			//public Operario() {
			//}

			
			
			/*
			public void ingresarMateriaPrima(MateriaPrima mp) {//cheuqeado
				//boolean ingreso=mps.add(mp);
				boolean stock=mp.getStockDisponible()>=100;
				if(stock) {
					mps.add(mp);
					System.out.println("materia prima ingresada correctamente");
				}else {
					System.out.println("stock insuficiente");
				}
			}
			
			public void cargarProductos(Producto p){
				boolean ingreso=infoProductos.add(p);
				if(ingreso) {
					System.out.println("Producto ingresado correctamente");	
				}

			}
			
			
			
			public void buscarMateriaPrima(MateriaPrima mp){//chequeado
				boolean buscar=mps.contains(mp);
				if(buscar){
					System.out.println(mp.toString());
				}
		}
			
			
			public void producirMercaderia(Operario op, MateriaPrima mp, int cantidad){//chequeado
				boolean producir=mps.contains(mp)&& mp.getStockDisponible()>=cantidad; 
				if(producir){
					System.out.println("produciendo con la materia prima "+mp.getNombre());	
				}else{
					System.out.println("Materia prima inexistente o stock insuficiente");	
				}

			}
			
			
			public void infoMateriaPrima() {//chequeado
				System.out.println(mps);
			}
			
			
			public void visualizarStockMateriaPrima (MateriaPrima mp){//chequeado
				boolean tieneStock=mps.contains(mp);//chequear
				if(tieneStock){
					System.out.println("Nombre del producto: "+mp.getNombre());
					System.out.println("Cantidad de stock disponible: "+mp.getStockDisponible());
				}else{
					System.out.println("No hay stock");
				}
			}

			*/
			
		

}
